{"name":"Emailsclassifier","tagline":"Email Classifier based on supervised Machine Learning (NBTree and Multinomial Naive bayes Implementation)","body":"### What the hack is this ?\r\nThis is a Java Program, which can predict the class of an email.  \r\nClasses predicted are {Spam,Sports,Business,Technology,Entertainment}.\r\nFor more details read :\r\n* Project Description (In .docx)\r\n* Final Report (In .docx)\r\n* The Plan (In .docx)\r\n\r\n### How it works\r\nStep 1: Read the training emails.  \r\nStep 2: Text Pre-processing.  \r\n* Tokenization using Stanford Parser.(Need to decide which parts of speech to be taken).  \r\n* Stop word removal. : to remove words such as “a”, “the”, “I”, “he”, “she”, “is”, “are”, etc.  \r\n* Normalize words. : Stanford Lemma.  \r\n* Then make instance based on top K term frequency.\r\n\r\nStep 3: Training  \r\n* Design NBTree – Hybrid Decision Tree Naïve baiyes classifier.  \r\n* Train input on this, along with a Test Instance.  \r\n* Predict the category. \r\n\r\nThe source code also contains the implementation of custom designed NBTree & custom multinomial Naive Bayes. \r\n\r\n### Why NBTree ?\r\n```\r\nModel used is NBTree.\r\nProblem How can we generate a classifier from an arbitrarily sized database of labeled instances, where attributes\r\nare not necessarily independent?\r\nSolutions\r\n1 Naive-Bayes Classifiers (Cons: Assumes independence of attributes)\r\n2 Decision-Trees (C4.5)(Cons: Fragmentation as number of splits becomes large)\r\n3 NBTree\r\n  * Many attributes are relevant for classification\r\n  * Attributes are not necessarily independent\r\n  * Database is large\r\n  * Interpretability of classifier is important\r\n\r\nRefrences:\r\nR. Kohavi.\r\n\"Scaling Up the Accuracy of Naive-Bayes Classifiers: a Decision-Tree Hybrid\"\r\n\r\n```\r\n### Build Information\r\n```\r\nVery Imp : Please Download \"stanford-corenlp-3.3.1-models.jar\"(http://nlp.stanford.edu/software/stanford-corenlp-full-2014-01-04.zip) As i was not able to upload this jar, because of size limit. Download and copy it inside lib folder. Then you should be able to Build this project,\r\n```\r\nThere are two ways to run :\r\n1. In ecclipse -\r\na).Import the folder \"HybridEmailClassifier\", inside ecclipse.   \r\nb).To do this, inside package explorer of eclipse right click and select import.  \r\nc).Under General , select existing Projects into workspace.  \r\nd).do check copy projects into existing workspace.  \r\ne).Once the project is imported, right click project and click on \"Run configuration\" inside Run as options.  \r\nf).In the arguments tab, make sure your are passing \"production\" as Program Arguments.  \r\ng).Finally run the com.anupam.hybrid.HybridMain class. This has the main method.  \r\n\r\n2. Using Ant -\r\na).You should have ant installed and configured.  \r\nb).Open cmd prompt.  \r\nc).cd to folder \"HybridEmailClassifier\".  \r\nd).compile the source code by simply typing ant in cmd prompt.  \r\ne).This compiles the files and generates a folder \"build\".  \r\nf).Now run the program by typing ant HybridMain.  ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}